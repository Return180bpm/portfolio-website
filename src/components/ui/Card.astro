---
import { Image } from '@astrojs/image/components'
import { CollectionEntry } from 'astro:content'
import { t } from 'i18next'
import ProjectCardOverlay from './ProjectCardOverlay.astro'

interface Props {
	project: CollectionEntry<'projects'>
}

const {
	data: { title = 'Project title', description, tags, links, image }
} = Astro.props.project
---

<project-card>
	<article
		data-testId="card"
		class="flex w-full flex-col gap-4 rounded-md border-2 border-black bg-white p-4 drop-shadow-2xl md:w-1/2 lg:w-1/3"
	>
		<div class="relative">
			<ProjectCardOverlay
				{description}
				skill_tags={tags.skills}
				tech_tags={tags.tech}
				repoURL={links.repo}
			/>

			<Image
				class="rounded-md"
				src={`/project-previews/${image.filename}`}
				alt={image.alt}
				fit="cover"
				position="top"
				format="png"
				width={400}
				height={400}
				loading="eager"
			/>
		</div>
		<div class="flex h-auto items-baseline justify-between">
			<a href={links.repo} aria-label="link to repo">
				<span class="text-xl underline decoration-black lg:text-2xl"
					>{t('home.projects.link-more')}</span
				>
			</a>
			<a
				href={links.demo}
				aria-label="link to project"
				target="_blank"
				rel="noopener"
			>
				<span
					class="inline-block rounded-md bg-black px-5 py-3 text-xl font-light text-white lg:text-2xl"
					>{t('home.projects.link-demo')}</span
				>
			</a>
		</div>
	</article>
</project-card>

<script>
	class Card extends HTMLElement {
		constructor() {
			super()
			// Read the message from the data attribute.
			const image = this.querySelector('img')
			const overlay = this.querySelector('.description-overlay')
			overlay?.addEventListener('click', (event) => {
				event.stopPropagation()
			})
			image?.addEventListener('click', (event) => {
				event.stopPropagation()

				overlay?.classList.toggle('invisible')
				overlay?.classList.toggle('opacity-0')
			})
			document.addEventListener('click', (event) => {
				if (!overlay?.classList.contains('invisible')) {
					overlay?.classList.toggle('invisible')
					overlay?.classList.toggle('opacity-0')
				}
			})
		}
	}

	customElements.define('project-card', Card)
</script>
