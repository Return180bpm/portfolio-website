---
import { Image, Picture } from '@astrojs/image/components'
import { CollectionEntry } from 'astro:content'
import { t } from 'i18next'
import ProjectCardOverlay from './ProjectCardOverlay.astro'

interface Props {
	project: CollectionEntry<'projects'>
}

const {
	data: { title = 'Project title', description, tags, links, image }
} = Astro.props.project

const imageUrl = `/project-previews/${image.filename}.png`
---

<project-card class="rounded-md border border-black bg-light shadow-md">
	<article data-testId="card" class="flex flex-col gap-4 rounded-md p-4">
		<div class="relative">
			<ProjectCardOverlay
				{description}
				skill_tags={tags.skills}
				tech_tags={tags.tech}
				repoURL={links.repo}
			/>
			<Picture
				src={import(
					`../../assets/images/project-previews/${image.filename}.png`
				)}
				alt={image.alt}
				widths={[400, 640]}
				sizes="(min-width: 640px) 46vw, (min-width: 1024x) 30vw,  96vw"
				fit="cover"
				position="top"
				class="aspect-square w-full object-cover object-top"
			/>
		</div>

		<!-- <Image
			class="rounded-md"
			src={imageUrl}
			alt={image.alt}
			fit="contain"
			position="center"
			format="png"
			width={400}
			height={400}
			loading="eager"
		/> -->
		<div class="flex h-auto items-baseline justify-between">
			<a href={links.live} aria-label="link to repo">
				<h3 class="text-xl underline decoration-black lg:text-2xl">
					{title}
				</h3>
			</a>
			<a
				href={links.live}
				aria-label="link to project"
				target="_blank"
				rel="noopener"
			>
			</a>
			<button class="button-base button-outlined">
				<span class="">{t('home.projects.card.link-primary')}</span>
			</button>
		</div>
	</article>
</project-card>

<script>
	class ProjectCard extends HTMLElement {
		constructor() {
			super()
			// Read the message from the data attribute.
			const image = this.querySelector('img')
			// const imageWrapper = this.querySelector('.image-wrapper')

			const button = this.querySelector('.button-base')
			const overlay = this.querySelector('.description-overlay')

			// imageWrapper?.addEventListener('click', (event) => {
			// 	event.stopPropagation()

			// 	overlay?.classList.toggle('invisible')
			// 	overlay?.classList.toggle('opacity-0')
			// })

			// ðŸ’© For testing
			// overlay?.classList.toggle('invisible')
			// 	overlay?.classList.toggle('opacity-0')

			button?.addEventListener('click', (event) => {
				event.stopPropagation()

				overlay?.classList.toggle('invisible')
				overlay?.classList.toggle('opacity-0')
			})
			image?.addEventListener('click', (event) => {
				event.stopPropagation()

				overlay?.classList.toggle('invisible')
				overlay?.classList.toggle('opacity-0')
			})
			document.addEventListener('click', (event) => {
				if (!overlay?.classList.contains('invisible')) {
					overlay?.classList.toggle('invisible')
					overlay?.classList.toggle('opacity-0')
				}
			})
			overlay?.addEventListener('click', (event) => {
				event.stopPropagation()
			})
		}
	}

	customElements.define('project-card', ProjectCard)
</script>
